spring:
  application:
    name: hhplus
---
spring:
  config:
    activate:
      on-profile: "local"

  datasource:
    url: jdbc:mysql://localhost:3306/hhplus?characterEncoding=UTF-8&serverTimezone=UTC
    username: application
    password: application
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    open-in-view: false
    generate-ddl: false
    show-sql: true
    hibernate:
      ddl-auto: create-drop   # 로컬은 update로 두는 게 개발 편리
    defer-datasource-initialization: true
    properties:
      hibernate.timezone.default_storage: NORMALIZE_UTC
      hibernate.jdbc.time_zone: UTC
      hibernate.format_sql: true
      hibernate.highlight_sql: true

  sql:
    init:
      mode: always
      data-locations: classpath:coupon-data-init.sql
#      continue-on-error: true   # ✅ 추가: 중복 에러가 나도 부팅 진행

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
    listener:
      missing-topics-fatal: false

  data:
    redis:
      host: localhost
      port: 6379

logging:
  level:
    org.springframework.jdbc.datasource.init: DEBUG
    org.springframework.boot.autoconfigure: INFO
#    org.apache.kafka.clients.consumer: DEBUG
#    org.springframework.kafka: DEBUG
#    org.springframework.kafka.listener: DEBUG
---
spring:
  config:
    activate:
      on-profile: "docker"

  datasource:
    url: jdbc:mysql://mysql:3306/hhplus?characterEncoding=UTF-8&serverTimezone=UTC
    username: application
    password: application
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    open-in-view: false
    generate-ddl: false
    show-sql: true
    hibernate:
      ddl-auto: create-drop
    defer-datasource-initialization: true
    properties:
      hibernate.timezone.default_storage: NORMALIZE_UTC
      hibernate.jdbc.time_zone: UTC
      hibernate.format_sql: true
      hibernate.highlight_sql: true
  sql:
    init:
        mode: always
        data-locations: classpath:coupon-data-init.sql
  kafka:
    bootstrap-servers: kafka:29092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
    listener:
      missing-topics-fatal: false

  data:
    redis:
      host: redis
      port: 6379

logging:
  level:
    org.springframework.jdbc.datasource.init: DEBUG
    org.springframework.boot.autoconfigure: INFO
#    org.apache.kafka.clients.consumer: DEBUG
#    org.springframework.kafka: DEBUG
#    org.springframework.kafka.listener: DEBUG